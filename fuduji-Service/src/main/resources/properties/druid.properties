
druid.initialSize=10
#最小连接池数量
druid.minIdle=10
#最大连接数量
druid.maxActive=50
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，
#缺省启用公平锁，并发效率会有所下降，
#如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
druid.maxWait=60000
#有两个含义：
#1) Destroy线程会检测连接的间隔时间
# 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
druid.timeBetweenEvictionRunsMillis=60000
#Destory线程中如果检测到当前连接的最后活跃时间和当前时间的差值大于
#minEvictableIdleTimeMillis，则关闭当前连接。
druid.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句。
#如果validationQuery为null，testOnBorrow、testOnReturn、
#testWhileIdle都不会其作用。
druid.validationQuery=SELECT 'x' FROM DUAL
#建议配置为true，不影响性能，并且保证安全性。
#申请连接的时候检测，如果空闲时间大于
#timeBetweenEvictionRunsMillis，
#执行validationQuery检测连接是否有效。
druid.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，
#做了这个配置会降低性能。
druid.testOnBorrow=false
druid.testOnReturn=false
#是否缓存preparedStatement，也就是PSCache。
#PSCache对支持游标的数据库性能提升巨大，比如说oracle。
#在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。
#5.5及以上版本有PSCache，建议开启。
druid.poolPreparedStatements=true

druid.maxPoolPreparedStatementPerConnectionSize=20
#属性类型是字符串，通过别名的方式配置扩展插件，
#常用的插件有：
#监控统计用的filter:stat
#日志用的filter:log4j
# 防御sql注入的filter:wall
druid.filters=wall,stat
#maxIdle，这个不再用了，配置了也没效果

